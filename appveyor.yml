init:
  # If there's a tag, use that as the version.
  - ps: >-
      if($env:APPVEYOR_REPO_TAG -eq "true"){Update-AppveyorBuild -Version "$env:APPVEYOR_REPO_TAG_NAME"}
before_build:
  - cmd: dotnet restore 
build_script:
  - cmd: dotnet build 
test_script:
  - cmd: dotnet test 
os: Visual Studio 2019
deploy:
  release: $(appveyor_build_version)
  provider: GitHub
  auth_token:
    secure: VgtP6jKIZM4Rx5hfJJmT60600yFUf0rjMaGCaIsKxx4s5WPQ/AjyDOxq27MNNdF1
  artifact: release
  tag: $(APPVEYOR_REPO_TAG_NAME)
  on:
    APPVEYOR_REPO_TAG: true
artifacts:
- path: 'Release.zip'
  name: release
# builds on tags will publish all nupkgs to GitHub as a Draft release
before_deploy:
  - cmd: 
      dotnet build -c Release
      dotnet publish Centaurus.Alpha -r win-x64 -c Release /p:PublishSingleFile=true -o Release/win-x64 /p:DebugType=None
      dotnet publish Centaurus.Auditor -r win-x64 -c Release /p:PublishSingleFile=true -o Release/win-x64 /p:DebugType=None
      dotnet publish Centaurus.Alpha -r linux-x64 -c Release /p:PublishSingleFile=true -o Release/linux-x64 /p:DebugType=None
      dotnet publish Centaurus.Auditor -r linux-x64 -c Release /p:PublishSingleFile=true -o Release/linux-x64 /p:DebugType=None
      dotnet publish Centaurus.Alpha -r osx-x64 -c Release /p:PublishSingleFile=true -o Release/osx-x64 /p:DebugType=None
      dotnet publish Centaurus.Auditor -r osx-x64 -c Release /p:PublishSingleFile=true -o Release/osx-x64 /p:DebugType=None
      7z a Release.zip Release